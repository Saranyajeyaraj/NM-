<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Text To Word</title></head><body><p>&nbsp;</p>
<p>&nbsp; &nbsp; // 1. PRODUCT DATA (The Catalogue)</p>
<p>const products = [</p>
<p>&nbsp; &nbsp; { id: 1, name: "Laptop Pro 2024", price: 499.99, category: "Electronics", inStock: true },</p>
<p>&nbsp; &nbsp; { id: 2, name: "Cotton T-Shirt", price: 19.99, category: "Apparel", inStock: true },</p>
<p>&nbsp; &nbsp; { id: 3, name: "JavaScript Mastery Book", price: 45.00, category: "Books", inStock: true },</p>
<p>&nbsp; &nbsp; { id: 4, name: "Noise Cancelling Headphones", price: 120.50, category: "Electronics", inStock: false },</p>
<p>&nbsp; &nbsp; { id: 5, name: "Denim Jeans Slim Fit", price: 75.00, category: "Apparel", inStock: true },</p>
<p>&nbsp; &nbsp; { id: 6, name: "Web Dev Basics Guide", price: 12.00, category: "Books", inStock: false },</p>
<p>&nbsp; &nbsp; { id: 7, name: "4K Monitor 27-inch", price: 350.00, category: "Electronics", inStock: true },</p>
<p>&nbsp; &nbsp; { id: 8, name: "Leather Jacket", price: 299.99, category: "Apparel", inStock: true },</p>
<p>];</p>
<p>&nbsp;</p>
<p>const productGrid = document.getElementById('product-grid');</p>
<p>const filterInputs = document.querySelectorAll('.sidebar input[type="checkbox"], #price-range');</p>
<p>&nbsp;</p>
<p>// 2. RENDERING FUNCTION</p>
<p>function renderProducts(productList) {</p>
<p>&nbsp; &nbsp; productGrid.innerHTML = ''; // Clear previous products</p>
<p>&nbsp;</p>
<p>&nbsp; &nbsp; if (productList.length === 0) {</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; productGrid.innerHTML = '&lt;p id="loading-message"&gt;No products match your current filters.&lt;/p&gt;';</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; return;</p>
<p>&nbsp; &nbsp; }</p>
<p>&nbsp;</p>
<p>&nbsp; &nbsp; productList.forEach(product =&gt; {</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; const card = document.createElement('div');</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; card.className = `product-card ${product.inStock ? '' : 'out-of-stock'}`;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; // Simple rendering of product data</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; card.innerHTML = `</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h3&gt;${product.name}&lt;/h3&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;Category: ${product.category}&lt;/p&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p class="price"&gt;$${product.price.toFixed(2)}&lt;/p&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;Status: ${product.inStock ? 'In Stock' : 'Out of Stock'}&lt;/p&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; `;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; productGrid.appendChild(card);</p>
<p>&nbsp; &nbsp; });</p>
<p>}</p>
<p>&nbsp;</p>
<p>// 3. FILTERING LOGIC</p>
<p>function applyFilters() {</p>
<p>&nbsp; &nbsp; let filteredProducts = [...products]; // Start with the full list</p>
<p>&nbsp; &nbsp;&nbsp;</p>
<p>&nbsp; &nbsp; // --- 3a. CATEGORY FILTER ---</p>
<p>&nbsp; &nbsp; const activeCategories = Array.from(document.querySelectorAll('input[data-filter="category"]:checked'))</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .map(input =&gt; input.value);</p>
<p>&nbsp; &nbsp;&nbsp;</p>
<p>&nbsp; &nbsp; if (activeCategories.length &gt; 0) {</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; filteredProducts = filteredProducts.filter(product =&gt;&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeCategories.includes(product.category)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; );</p>
<p>&nbsp; &nbsp; }</p>
<p>&nbsp; &nbsp;&nbsp;</p>
<p>&nbsp; &nbsp; // --- 3b. PRICE RANGE FILTER ---</p>
<p>&nbsp; &nbsp; const maxPrice = parseFloat(document.getElementById('price-range').value);</p>
<p>&nbsp; &nbsp;&nbsp;</p>
<p>&nbsp; &nbsp; // Update the visual price display</p>
<p>&nbsp; &nbsp; document.getElementById('price-value').textContent = maxPrice.toFixed(0);&nbsp;</p>
<p>&nbsp; &nbsp;&nbsp;</p>
<p>&nbsp; &nbsp; filteredProducts = filteredProducts.filter(product =&gt;&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; product.price &lt;= maxPrice</p>
<p>&nbsp; &nbsp; );</p>
<p>&nbsp;</p>
<p>&nbsp; &nbsp; // --- 3c. IN STOCK FILTER ---</p>
<p>&nbsp; &nbsp; const inStockChecked = document.getElementById('in-stock-filter').checked;</p>
<p>&nbsp;</p>
<p>&nbsp; &nbsp; if (inStockChecked) {</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; filteredProducts = filteredProducts.filter(product =&gt; product.inStock === true);</p>
<p>&nbsp; &nbsp; }</p>
<p>&nbsp; &nbsp;&nbsp;</p>
<p>&nbsp; &nbsp; renderProducts(filteredProducts);</p>
<p>}</p>
<p>&nbsp;</p>
<p>// 4. EVENT LISTENERS</p>
<p>filterInputs.forEach(input =&gt; {</p>
<p>&nbsp; &nbsp; // Every time a filter input changes, re-apply all filters</p>
<p>&nbsp; &nbsp; input.addEventListener('change', applyFilters);</p>
<p>});</p>
<p>&nbsp;</p>
<p>// Price range slider needs input event for real-time update</p>
<p>document.getElementById('price-range').addEventListener('input', applyFilters);</p>
<p>&nbsp;</p>
<p>// Initial load: render all products</p>
<p>window.onload = () =&gt; {</p>
<p>&nbsp; &nbsp; applyFilters();&nbsp;</p>
<p>};</p>
<p>&nbsp;</p>
<p>// 5. CLEAR ALL FUNCTION</p>
<p>function clearAllFilters() {</p>
<p>&nbsp; &nbsp; // Uncheck all checkboxes</p>
<p>&nbsp; &nbsp; document.querySelectorAll('input[type="checkbox"]').forEach(checkbox =&gt; {</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; checkbox.checked = false;</p>
<p>&nbsp; &nbsp; });</p>
<p>&nbsp;</p>
<p>&nbsp; &nbsp; // Reset price range slider to max value</p>
<p>&nbsp; &nbsp; const priceRange = document.getElementById('price-range');</p>
<p>&nbsp; &nbsp; priceRange.value = priceRange.max;</p>
<p>&nbsp;</p>
<p>&nbsp; &nbsp; // Apply filters to reset the grid</p>
<p>&nbsp; &nbsp; applyFilters();</p>
<p>}</p></body></html>